//Given the head of a linked list, remove the nth node from the end of the list and return its head.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode *prev = head ; 
        ListNode *forw = head ; 
        
        int x = n ;
        

        while (x--) {
            forw = forw->next ; 
        }
        
        if(forw != NULL){
        
            while(forw->next != NULL ){
                forw = forw->next ; 
                prev = prev->next ; 
            }

            prev->next = prev->next->next ; 

            return head ; 
        }
        else
            head = head->next ; 
        return head;
    }
};
