//You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
Find two lines that together with the x-axis form a container, such that the container contains the most water.
Return the maximum amount of water a container can store.

//Attempt 1 (Exceeds time limit)
class Solution {
public:
    int maxArea(vector<int>& height) {
        int area;
        int M=0;
        for(int i=0; i<height.size(); i++)
        {
            for(int j=i+1; j<height.size(); j++)
            {   
                area=min(height[i], height[j])*(j-i);
                if(area>M)
                    M=area;
            }
        }
        return M;
    }
};


//Attempt 2 (Better time complexity)
class Solution {
public:
    int maxArea(vector<int>& height) {
        int area;
        int M=0;
        int i=0, j=height.size()-1;
        while(i<j)
        {   
            area=min(height[i], height[j])*(j-i);
            if(M<area)
                M=area;
            if(height[i]<height[j])
                i++;
            else
                j--;        
        }
        return M;
    }
};
